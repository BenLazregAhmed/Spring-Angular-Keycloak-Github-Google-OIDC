spring.application.name=customers-app-with-thymleaf
server.port=8090
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true

spring.security.oauth2.client.registration.google.clientId=61823323972-tgaep2dfrjdef3po75ta4d5n51fod6vk.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

spring.security.oauth2.client.registration.github.clientId=Ov23liCOPH3KZePlQ0zZ
spring.security.oauth2.client.registration.github.client-secret=615332388477c276ac8c33d27bcb7799c0980732
spring.security.oauth2.client.provider.github.user-name-attribute=login

spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=sYwQ853HtkUbxIAJLA5z6FunOwQV43sx
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8090/login/oauth2/code/sdia-customer-client}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/sdia-realm}

spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/auth}
spring.security.oauth2.client.registration.keycloak.token-uri =${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/token}
